const core=require("@actions/core"),github=require("@actions/github"),path=require("path"),fs=require("fs"),glob=require("glob"),csso=require("csso"),{minify:minify}=require("terser"),{Octokit:Octokit}=require("@octokit/core"),{createPullRequest:createPullRequest}=require("octokit-plugin-create-pull-request"),MyOctokit=Octokit.plugin(createPullRequest);!async function(){try{let e=core.getInput("directory");const t=process.env.GITHUB_TOKEN;if(void 0===t||0===t.length)throw new Error("\n        Token not found. Please, set a secret token in your repository. \n        To know more about creating tokens, visit: https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\n        To know more about setting up personal access token, visit: https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets\n      ");const n=github.context.ref.slice(11);if(n.startsWith("_minisauras_"))return void console.log(`Code has been minifed. Branch ${n} can be merged now.`);const o=new MyOctokit({auth:t}),i=github.context.repo;(null==e||null==e||e.startsWith("."))&&(e="");const r=e+"**/*.{css,js}",s={dot:!0,ignore:["node_modules/**/*"]},c="_minisauras_"+Math.random().toString(36).slice(2);glob(r,s,(function(e,t){if(e)throw new Error("File not found");let r=[];t.forEach((function(e){Promise.all([readAndMinify(e)]).then((function(t){r.push({path:e,content:t[0]})})).finally((function(){let e={};if(r.length==t.length&&!n.startsWith("_minisauras_")&&0!==t.length){r.forEach((function(t){e[t.path]=t.content}));let n="Changes in these files:\n";t.forEach((function(e){n+=`- **${e}** \n`})),n+="![cat](https://media1.tenor.com/images/841aeb9f113999616d097b414c539dfd/tenor.gif)";try{o.createPullRequest({owner:i.owner,repo:i.repo,title:`Minified ${t.length} files`,body:n,head:c,changes:[{files:e,commit:`Minified ${t.length} files`}]})}catch(e){throw new Error(e)}}})).catch((function(e){throw new Error(e)}))}))}))}catch(e){throw new Error(e)}}();const readAndMinify=async function(e){const t=fs.readFileSync(e,"utf8"),n=path.extname(e);if(".js"===n){return(await minify(t,{compress:!0})).code}if(".css"===n)return csso.minify(t).css;console.log("Other files")};